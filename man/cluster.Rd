% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/clustering.R
\name{cluster}
\alias{cluster}
\title{cluster}
\usage{
cluster(ft_mat, metadata, region, heatmap = FALSE, title = NULL,
  outdir = NULL, optimal_clusters = FALSE, n_features = FALSE,
  estimate_state = FALSE, signal_col = NULL, mark = NULL,
  test_condition = NULL)
}
\arguments{
\item{ft_mat}{matrix where columns are features and rows are samples as
returned by \code{\link{summarizePeaks}} or \code{\link{binarizePeaks}}}

\item{metadata}{A dataframe with a column "Sample" which stores
the sample identifiers, and at least one column, "Condition", which stores
the biological condition labels of the samples}

\item{region}{GRanges object specifying the query region}

\item{heatmap}{(Optional) Logical value indicating whether to plot
the heatmap for hierarchical clustering. Default: FALSE}

\item{title}{(Optional) If \code{heatmap} is TRUE, specify the title of the
plot, which will also be used for the output file name in PDF format}

\item{outdir}{(Optional) String specifying the name of the directory where
PDF of heatmaps should be saved}

\item{optimal_clusters}{(Optional) Logical value indicate whether to cluster
samples into two groups, or to find the optimal clustering solution by
choosing the set of clusters which maximizes the Average Silhouette width}

\item{n_features}{(Optional) Logical value indicating whether to include
a column "n_features" in the output storing the number of features in the
feature matrix constructed for the region, which may be useful for
understanding the behaviour of the position-aware strategy for constructing
feature matrices. Default: FALSE}

\item{estimate_state}{(Optional) Logical value indicating whether to include
a column "state" in the output specifying the estimated chromatin state of
a test condition. The state will be on of "ON", "OFF", or NA, where the
latter results if a binary switch between the conditions is unclear.
This is only possible when the feature matrix was constructed by the whole-
region strategy (\code{\link{summarizePeaks}}).
Default: FALSE.}

\item{signal_col}{(Optional) If \code{estimate_state} is TRUE, string
specifying the name of the column in the original peak files which
corresponds to the level of enrichment in the region, e.g. fold change}

\item{mark}{(Optional) If \code{estimate_state} is TRUE, string specifying
the name of the mark for which \code{ft_mat} was constructed}

\item{test_condition}{(Optional) If \code{estimate_state} is TRUE, string
specifying one of the two biological condtions in \code{metadata$Condition}
for which to estimate chromatin state.}
}
\value{
A dataframe with the region, the number of clusters inferred,
the cluster validity statistics, and the cluster assignments for each sample
}
\description{
cluster
}
\examples{
samples <- c("E068", "E071", "E074", "E101", "E102", "E110")
outfiles <- system.file("extdata", paste0(samples, ".H3K4me3.bed"),
package = "chromswitch")
Conditions <- c(rep("Brain", 3), rep("Other", 3))

metadata <- data.frame(Sample = samples,
    H3K4me3 = outfiles,
    Condition = Conditions,
    stringsAsFactors = FALSE)

region <- GenomicRanges::GRanges(seqnames = "chr19",
    ranges = IRanges::IRanges(start = 54924104, end = 54929104))

lpk <- retrievePeaks(H3K4me3,
    metadata = metadata,
    region = region)

ft_mat <- summarizePeaks(lpk, mark = "H3K4me3",
cols = c("qValue", "signalValue"))

cluster(ft_mat, metadata, region)

# Estimate the state of the test condition, "Brain"
cluster(ft_mat, metadata, region,
    estimate_state = TRUE,
    signal_col = "signalValue",
    mark = "H3K4me3",
    test_condition = "Brain")

}
